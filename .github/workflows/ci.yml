---
name: CI
on:
  pull_request: {}
  push:
    branches:
      - main
permissions:
  contents: read
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  verify-generated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Generate all
        run: |
          make generate-all
      - name: Verify changed files
        uses: tj-actions/verify-changed-files@v13
        id: verify-changed-files
        with:
          files: |
            **/*
      - name: Fail job is any changed files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          errorMsg="::error::\
            Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}\
            \nPlease run 'make generate-all' locally and commit the changes"
          echo -e "$errorMsg" && exit 1
  build-image:
    permissions:
      contents: read # for actions/checkout to fetch code
      packages: write # for docker/build-push-action to push images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # output 0.1.2
            type=semver,pattern={{version}}
            # output 0.1
            type=semver,pattern={{major}}.{{minor}}
            # disabled if major zero
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=ref,event=branch
            type=ref,event=pr
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max